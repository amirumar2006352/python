
class Solution(object):
    def combinationSum2(self, candidates, target):
        """
        :type candidates: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        result = []
        candidates.sort()  # Sorting helps in skipping duplicates

        def backtrack(start, path, total):
            if total == target:
                result.append(list(path))
                return
            if total > target:
                return

            prev = -1  # Track previous number to skip duplicates
            for i in range(start, len(candidates)):
                if candidates[i] == prev:  # Skip duplicate elements
                    continue
                
                path.append(candidates[i])
                backtrack(i + 1, path, total + candidates[i])  # Move to next index
                path.pop()  # Undo choice (backtrack)

                prev = candidates[i]  # Update prev to track duplicates

        backtrack(0, [], 0)
        return result
